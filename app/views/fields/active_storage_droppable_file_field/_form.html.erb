<%# debug (f.methods - Object.new.methods).sort %>
<%# debug (field.methods - Object.new.methods).sort %>
<%
if field.data.attached?
  src = url_for(field.data.blob)
  name = field.data.blob.filename
else
  src = "missing"
  name = "missing"
end
%>
<div class="field-unit__label">
  <%= f.label field.attribute %>
</div>
<div class="field-unit__field <%= "#{f.object_name}-#{field.name}" %>">
  <div class="active-storage-droppable-file-field__preview">
    <%= image_tag(src) %><br>
    <tt><%= name %></tt>
  </div>
  <%= f.file_field field.attribute %>
</div>

<style>
.active-storage-droppable-file-field__preview {
  margin-bottom: 1em;
}

.dragging {
  opacity: 0.5;
  box-shadow: inset 0 0 36px black;
}
</style>

<script>
(function(){
  // define the entire page as the drop area
  const dropArea = document.querySelector("body")

  // define some elements
  const fieldSelector = "<%= "#{f.object_name}-#{field.name}" %>"
  const fileInput = document.querySelector(`.${fieldSelector} input`)
  const previewImage = document.querySelector(`.${fieldSelector} img`)
  const previewName = document.querySelector(`.${fieldSelector} tt`)

  // don't open the file on drop
  const eventsToIgnore = ["drop", "dragenter", "dragover", "dragleave"]
  eventsToIgnore.forEach(eventName => dropArea.addEventListener(eventName, e => {
    // console.log(eventName, e)
    e.preventDefault()
    e.stopPropagation()
  }))

  // highlight during drag
  dropArea.addEventListener("dragenter", e => {
    dropArea.classList.add("dragging")
  })
  dropArea.addEventListener("drop", e => {
    dropArea.classList.remove("dragging")
  })

  // upon drop, set input and preview
  dropArea.addEventListener("drop", e => {
    const droppedFiles = e.dataTransfer.files
    const firstFile = droppedFiles[0]
    // set the file input
    fileInput.files = droppedFiles
    // set the preview
    previewName.innerHTML = firstFile.name
    const reader = new FileReader()
    reader.addEventListener("load", () => {
      previewImage.src = reader.result
    })
    reader.readAsDataURL(firstFile)
  })
})()
</script>
